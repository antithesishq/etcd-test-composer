name: Build and Push Config + Assertoor Image to Antithesis Registry

on:
  push:
    branches:
      - gh-action-docker-compose-up  # Trigger this action on push to the main branch
  workflow_dispatch:  # Allows manual trigger
  
env:
  REGISTRY: us-central1-docker.pkg.dev
  REPOSITORY: molten-verve-216720/demo-repository
  DOCKER_COMPOSE_PATH: "config/docker-compose.yml"  # path to docker compose in repository
  SLEEP_DURATION: 10                                # Duration to sleep before setup complete

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code
    - name: Checkout the code
      uses: actions/checkout@v3

    - name: Login to Antithesis Docker Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: _json_key
        password: ${{ secrets.JSON_LOGIN_KEY }}

    - name: Build and push config image
      uses: docker/build-push-action@v5
      with:
        context: ./
        file: ./Dockerfile.config
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.REPOSITORY}}/etcd-config:latest,
          ${{ env.REGISTRY }}/${{ env.REPOSITORY}}/etcd-config:${{ github.sha }}

    - name: Build and push client image
      uses: docker/build-push-action@v5
      with:
        context: ./test-template
        file: ./Dockerfile.client
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.REPOSITORY}}/etcd-client:latest,
          ${{ env.REGISTRY }}/${{ env.REPOSITORY}}/etcd-client:${{ github.sha }}

    - name: Install Docker Compose
      run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.3.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version
      continue-on-error: false

    - name: Checkout Repository for access
      uses: actions/checkout@v4
      continue-on-error: false

    - name: Start application-specific services using Docker Compose
      run: docker-compose -f $DOCKER_COMPOSE_PATH up -d
      continue-on-error: false

    - name: Sleep past setup_complete
      run: |
          echo "Sleeping for $SLEEP_DURATION seconds"
          sleep $SLEEP_DURATION
          echo "Finished sleeping"
      continue-on-error: false