name: Build Config + Workload Image; Validate SUT runs locally; push to Antithesis; kick off tests

on:
  push:
    branches:
      - gh-action-docker-compose-up  # Trigger this action on push to the main branch
  workflow_dispatch:  # Allows manual trigger
  
env:
  REGISTRY: us-central1-docker.pkg.dev
  REPOSITORY: molten-verve-216720/demo-repository
  DOCKER_COMPOSE_PATH: "config/docker-compose.yml"  # path to docker compose in repository
  SLEEP_DURATION: 60                                # Duration to sleep before setup complete
  CONTAINERS_EXPECTED_TO_BE_RUNNING: "etcd0 etcd1 etcd2 client"   # containers we expect to be running by setup_complete

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code
    - name: Checkout the code
      uses: actions/checkout@v3

    - name: Login to Antithesis Docker Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: _json_key
        password: ${{ secrets.JSON_LOGIN_KEY }}

    - name: Build and push config image
      uses: docker/build-push-action@v5
      with:
        context: ./config
        file: ./config/Dockerfile.config
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.REPOSITORY}}/etcd-config:latest,
          ${{ env.REGISTRY }}/${{ env.REPOSITORY}}/etcd-config:${{ github.sha }}

    # - name: Build and push client image
    #   uses: docker/build-push-action@v5
    #   with:
    #     context: ./test-template
    #     file: ./test-template/Dockerfile.client
    #     push: true
    #     tags: |
    #       ${{ env.REGISTRY }}/${{ env.REPOSITORY}}/etcd-client:latest,
    #       ${{ env.REGISTRY }}/${{ env.REPOSITORY}}/etcd-client:${{ github.sha }}

    - name: Install Docker using Docker's official script
      run: |
            curl -fsSL https://get.docker.com -o get-docker.sh 
            sudo sh get-docker.sh
      continue-on-error: false

    - name: Install Docker Compose
      run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.3.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version
      continue-on-error: false

    - name: Start application-specific services using Docker Compose
      run: docker-compose -f $DOCKER_COMPOSE_PATH up -d
      continue-on-error: false

    # - name: Validate our expected containers are running
    #   run: |
    #       EXPECTED_CONTAINERS=$CONTAINERS_EXPECTED_TO_BE_RUNNING

    #       for container in "${EXPECTED_CONTAINERS[@]}"; do
    #         CONTAINERS_RUNNING=$(docker ps --filter "name=$container" --filter "status=running" --format "{{.Names}}")

    #         if [[ ! "$CONTAINER_RUNNING" =~ "$container" ]]; then
    #           echo "Error: The container '$container' is not running!"
    #           exit 1
    #         fi
    #         echo "The container '$container' is running."
    #       done

    #       echo "All expected containers are running"
    #   continue-on-error: false

    - name: Sleep until setup_complete
      run: |
          docker exec -entrypoint $(podman ps | grep client | awk '{print $1;}') bash -c 'i=0   
          while [ $i -lt 10 ];   
          do   
            if grep -q "antithesis_setup" $ANTITHESIS_SDK_LOCAL_OUTPUT; then   
              echo "Setup_complete found"   
              break   
            fi   
              echo "Setup_complete not yet found"   
          sleep 10   
          i=$((i + 1))   
          done'

      continue-on-error: false 
